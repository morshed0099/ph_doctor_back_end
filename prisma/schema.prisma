// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String     @id @default(uuid())
  email              String     @unique
  name               String     @unique
  needPasswrodChange Boolean    @default(true)
  password           String
  role               UserRoll
  status             UserStatus @default(ACTIVE)
  createdAt          DateTime   @default(now())
  updatedAt          DateTime   @updatedAt
  admin              Admin?
  doctor             Doctor?
  patient            Patient?

  @@map("users")
}

model Admin {
  id            String   @id @default(uuid())
  name          String   @unique
  email         String   @unique
  profilePhoto  String?
  isDeleted     Boolean  @default(false)
  contactNumber String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  user          User     @relation(fields: [email], references: [email])
}

model Doctor {
  id                  String              @id @default(uuid())
  name                String
  email               String              @unique
  profilePhoto        String?
  address             String?
  registrationNumber  String
  isDeleted           Boolean             @default(false)
  experience          Int                 @default(0)
  gender              Gender
  appoinmentFee       Int
  qualification       String
  currentWorkingPlace String
  designation         String
  createdAt           DateTime            @default(now())
  updatedAt           DateTime            @updatedAt
  user                User                @relation(fields: [email], references: [email])
  doctorSpecialties   DoctorSpecialties[]

  @@map("doctors")
}

model Specialties {
  id                String              @id @default(uuid())
  title             String
  icon              String
  doctorSpecialties DoctorSpecialties[]

  @@map("specialties")
}

model DoctorSpecialties {
  doctorId      String
  specialtiesId String

  specialties Specialties @relation(fields: [specialtiesId], references: [id])
  doctor      Doctor      @relation(fields: [doctorId], references: [id])

  @@id([doctorId, specialtiesId])
  @@map("doctor_specialties")
}

model Patient {
  id           String   @id @default(uuid())
  name         String
  email        String   @unique
  profilePhoto String
  address      String?
  isDeleted    Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [email], references: [email])

  @@map("patient")
}

enum Gender {
  MALE
  FEMALE
}

enum UserRoll {
  SUPER_ADMIN
  ADMIN
  DOCTOR
  PATIENT
}

enum UserStatus {
  BLOCK
  ACTIVE
  DELETED
}
